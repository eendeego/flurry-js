// @flow strict

import type {ColorModesType} from './color-modes';

export type ProgramInfo = {
  program: WebGLProgram,
  attribLocations: {
    vertexPosition: number,
    vertexColor: number,
    textureCoord: number,
  },
  uniformLocations: {
    projectionMatrix: ?WebGLUniformLocation,
    modelViewMatrix: ?WebGLUniformLocation,
    uSampler: ?WebGLUniformLocation,
  },
};

export type SmokeParticle = {
  color: Float32Array, // floatToVector[4];
  position: Float32Array, // floatToVector[3];
  oldposition: Float32Array, // floatToVector[3];
  delta: Float32Array, // floatToVector[3];
  dead: Uint32Array, // intToVector;
  time: Float32Array, // floatToVector;
  animFrame: Uint32Array, // intToVector;
};

export type Smoke = {
  p: Array<SmokeParticle>, // [NUMSMOKEPARTICLES/4];
  nextParticle: number,
  nextSubParticle: number,
  lastParticleTime: number,
  firstTime: number,
  frame: number,
  old: Array<number>, // [3];
};

export type Star = {|
  position: Array<number>, // or [number, number, number]
  mystery: number,
  rotSpeed: number,
  ate: number,
|};

export type Spark = {|
  position: Array<number>, // or [number, number, number]
  mystery: number,
  delta: Array<number>, // or [number, number, number]
  color: Array<number>, // or [number, number, number, number]
|};

export type FlurryInfo = {|
  currentColorMode: ColorModesType,
  s: Smoke,
  star: Star,
  spark: Array<Spark>,
  streamExpansion: number,
  numStreams: number,
  flurryRandomSeed: number,
  fTime: number,
  fOldTime: number,
  fDeltaTime: number,
  briteFactor: number,
  drag: number,
  dframe: number,
|};

export type SeraphimBuffers = {|
  seraphimVertices: Float32Array, // NUMSMOKEPARTICLES*2+1
  seraphimVerticesBuffer: WebGLBuffer,
  seraphimColors: Float32Array, // NUMSMOKEPARTICLES*4+1
  seraphimColorsBuffer: WebGLBuffer,
  seraphimTextures: Float32Array, // [NUMSMOKEPARTICLES*2*4];
  seraphimTexturesBuffer: WebGLBuffer,
  seraphimIndices: Uint16Array, // [NUMSMOKEPARTICLES*3*2];
  seraphimIndicesBuffer: WebGLBuffer,
|};

export type SmokeParameters = {
  gravity: number,
  incohesion: number,
  colorIncoherence: number,
  streamSpeed: number,
  fieldCoherence: number,
  fieldSpeed: number,
  seraphDistance: number,
  streamSize: number,
  fieldRange: number,
  streamBias: number,
};

export type GlobalInfo = {|
  /* system values */
  gl: WebGLRenderingContext,
  width: number,
  height: number,

  startTime: number,
  timeInSecondsSinceStart: number,
  frameCounter: number,
  oldFrameTime: number,

  smokeParameters: $ReadOnly<SmokeParameters>,

  flurries: $ReadOnlyArray<FlurryInfo>,
  seraphimProgramInfo: ProgramInfo,
  seraphimBuffers: SeraphimBuffers,
  smokeTexture: WebGLTexture,

  // Only used if DRAW_SPARKS is true
  debug?: {
    spark: {
      vertices: Float32Array,
      verticesBuffer: WebGLBuffer,
      programInfo: ProgramInfo,
    },
  },
|};

export type RenderContext = {|
  gl: FlurryInfo,
|};
